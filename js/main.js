// Almacena y recupera el registro de mascotas desde localStorage
let registroDeMascotas = JSON.parse(localStorage.getItem("registroDeMascotas")) || [];

// Funci√≥n para guardar los datos en localStorage
function guardarEnLocalStorage() {
    localStorage.setItem("registroDeMascotas", JSON.stringify(registroDeMascotas));
}

// üïí Funci√≥n para registrar una nueva mascota
function registrarMascotaConRetraso(callback) {
    console.log("üîÑ Validando el registro de la mascota...");

    setTimeout(() => {
        let nombre = prompt("Ingrese el nombre de su mascota");
        let edad = prompt("Ingrese la edad de su mascota");
        let especie = prompt("Ingrese de qu√© especie es su mascota");
        let peso = prompt("Ingrese cu√°nto pesa su mascota");
        let estadoDeSalud = prompt("Ingrese en qu√© estado de salud se encuentra su mascota: (Sano, Enfermo, En tratamiento)");

        if (!nombre || !edad || !especie || !peso || !estadoDeSalud) {
            console.log("‚ùå Todos los campos son obligatorios.");
            return;
        }

        let mascota = { nombre, edad, especie, peso, estadoDeSalud };
        registroDeMascotas.push(mascota);
        guardarEnLocalStorage();

        console.log("‚úÖ Mascota registrada con √©xito.");
        callback(); // 
    }, 2000); 
}

// üïí Funci√≥n para buscar una mascota
function buscarMascotaConRetraso() {
    let nombreBuscado = prompt("Ingrese el nombre de la mascota que desea buscar").toLowerCase();
    console.log("üîç Buscando en la base de datos...");

    setTimeout(() => {
        let mascotaEncontrada = registroDeMascotas.find(mascota => mascota.nombre.toLowerCase() === nombreBuscado);

        if (mascotaEncontrada) {
            console.log("‚úÖ Mascota encontrada:");
            console.log(`üêæ Nombre: ${mascotaEncontrada.nombre}`);
            console.log(`üìÖ Edad: ${mascotaEncontrada.edad}`);
            console.log(`üê∂ Especie: ${mascotaEncontrada.especie}`);
            console.log(`‚öñÔ∏è Peso: ${mascotaEncontrada.peso}`);
            console.log(`‚ù§Ô∏è Estado de Salud: ${mascotaEncontrada.estadoDeSalud}`);
        } else {
            console.log(`‚ùå No se encontr√≥ ninguna mascota con el nombre "${nombreBuscado}".`);
        }
    }, 1500); 
}

// üïí Funci√≥n para actualizar el estado de salud con espera 
function actualizarEstadoDeSaludConRetraso() {
    let nombreMascota = prompt("Ingrese el nombre de la mascota que desea actualizar").toLowerCase();
    let mascotaEncontrada = registroDeMascotas.find(mascota => mascota.nombre.toLowerCase() === nombreMascota);

    if (mascotaEncontrada) {
        console.log("ü©∫ Consultando al veterinario...");
        setTimeout(() => {
            let nuevoEstado = prompt("Ingrese el nuevo estado de salud de la mascota: (Sano, Enfermo, En tratamiento)");
            mascotaEncontrada.estadoDeSalud = nuevoEstado;
            guardarEnLocalStorage();

            console.log("‚úÖ Estado de salud actualizado con √©xito.");
        }, 3000); 
    } else {
        console.log(`‚ùå No se encontr√≥ ninguna mascota con el nombre "${nombreMascota}".`);
    }
}

// Funci√≥n para listar todas las mascotas registradas
function listarMascotas() {
    if (registroDeMascotas.length === 0) {
        console.log("‚ö†Ô∏è No hay mascotas registradas.");
        return;
    }

    console.log("üìú Listado de Mascotas Registradas:");
    registroDeMascotas.forEach((mascota, index) => {
        console.log(`${index + 1}. Nombre: ${mascota.nombre}, Edad: ${mascota.edad}, Especie: ${mascota.especie}, Peso: ${mascota.peso}, Estado de Salud: ${mascota.estadoDeSalud}`);
    });
}

// Funci√≥n para eliminar una mascota por nombre
function eliminarMascota() {
    let nombreMascota = prompt("Ingrese el nombre de la mascota que desea eliminar").toLowerCase();
    let indice = registroDeMascotas.findIndex(mascota => mascota.nombre.toLowerCase() === nombreMascota);

    if (indice !== -1) {
        registroDeMascotas.splice(indice, 1);
        guardarEnLocalStorage();
        console.log(`‚úÖ La mascota "${nombreMascota}" ha sido eliminada.`);
    } else {
        console.log(`‚ùå No se encontr√≥ ninguna mascota con el nombre "${nombreMascota}".`);
    }
}

// Funci√≥n para salir del programa
function salir() {
    console.log("üëã ¬°Gracias por usar el sistema de registro de mascotas!");
}

// Men√∫ de opciones
function menu() {
    let opcion;
    do {
        opcion = prompt(`Seleccione una opci√≥n:
        1. Registrar una nueva mascota
        2. Listar todas las mascotas registradas
        3. Buscar una mascota por nombre
        4. Actualizar el estado de salud de una mascota
        5. Eliminar una mascota por nombre
        6. Salir`).trim();

        switch (opcion) {
            case "1":
                registrarMascotaConRetraso(menu);
                return; // Evita que el men√∫ se muestre antes de completar el registro
            case "2":
                listarMascotas();
                break;
            case "3":
                buscarMascotaConRetraso();
                break;
            case "4":
                actualizarEstadoDeSaludConRetraso();
                break;
            case "5":
                eliminarMascota();
                break;
            case "6":
                salir();
                return;
            default:
                console.log("‚ùå Opci√≥n no v√°lida. Intente de nuevo.");
        }
    } while (opcion !== "6");
}

// Iniciar el programa
menu();
